using System;
using System.Data.SqlTypes;
using YTS.Model.Attribute;

namespace YTS.Model.Table.Attribute
{
    /// <summary>
    /// 数据表列特性  同一程序不能多个解释。无法继承此类。
    /// </summary>
    [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)]
    public class ColumnAttribute : AbsBasicAttribute
    {
        public ColumnAttribute() {
        }

        /// <summary>
        /// 是否映射数据
        /// </summary>
        public bool IsShineUpon { get { return _IsShineUpon; } set { _IsShineUpon = value; } }
        private bool _IsShineUpon = true;

        /// <summary>
        /// 是否主键
        /// </summary>
        public bool IsPrimaryKey {
            get { return _IsPrimaryKey; }
            set {
                _IsPrimaryKey = value;
                if (_IsPrimaryKey) {
                    IsCanBeNull = false;
                    SortIndex = ushort.MinValue;
                }
            }
        }
        private bool _IsPrimaryKey = false;

        /// <summary>
        /// 是否标识列
        /// </summary>
        public bool IsIDentity {
            get { return _IsIDentity; }
            set {
                _IsIDentity = value;
                if (_IsIDentity) {
                    IsCanBeNull = false;
                }
            }
        }
        private bool _IsIDentity = false;

        /// <summary>
        /// 是否自动生成其值
        /// </summary>
        public bool IsAutoGenerated {
            get { return _IsAutoGenerated; }
            set {
                _IsAutoGenerated = value;
                if (_IsAutoGenerated) {
                    IsCanBeNull = !_IsAutoGenerated;
                }
            }
        }
        private bool _IsAutoGenerated = false;
        
        /// <summary>
        /// 是否可以为 NULL
        /// </summary>
        public bool IsCanBeNull { get { return _iscanBeNull; } set { _iscanBeNull = value; } }
        private bool _iscanBeNull = true;

        /// <summary>
        /// 排序序列, 数字越小越大
        /// </summary>
        public ushort SortIndex { get { return _sortIndex; } set { _sortIndex = value; } }
        private ushort _sortIndex = 999;
    }
}
